version: '2.4'

services:
  nacos:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/nacos-server:v2.2.0
    container_name: hmr-nacos
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    environment:
#      HMR_DB_HOST: ${HMR_DB_HOST}
#      HMR_DB_NACOS_NAME: ${HMR_DB_NACOS_NAME}
#      HMR_DB_USER: ${HMR_DB_USER}
#      HMR_DB_PASSWORD: ${HMR_DB_PASSWORD}
#      HMR_MYSQL_HOST: ${HMR_DB_HOST}
#      HMR_MYSQL_PORT: ${HMR_DB_PORT}
#      HMR_MYSQL_DB: ${HMR_DB_NAME}
#      HMR_MYSQL_USER: ${HMR_DB_USER}
#      HMR_MYSQL_PASSWORD: ${HMR_DB_PASSWORD}
      DB_VENDOR: mysql
      PREFER_HOST_MODE: hostname
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: ${HMR_DB_HOST}
      MYSQL_SERVICE_DB_NAME: ${HMR_DB_NACOS_NAME}
      MYSQL_SERVICE_PORT: ${HMR_DB_PORT}
      MYSQL_SERVICE_USER: ${HMR_DB_USER}
      MYSQL_SERVICE_PASSWORD: ${HMR_DB_PASSWORD}
      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai
    volumes:
      - ${HMR_BASE}/logs/nacos:/home/nacos/logs
#      - ${HMR_BASE}/conf/nacos/application.properties:/home/nacos/init.d/application.properties
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9555:9555"
    mem_limit: 2g
    mem_reservation: 512M
    cpus: 2
    healthcheck:
      test: "curl -fsL http://localhost:8848/nacos/actuator/health> /dev/null"
      interval: 2s
      timeout: 10s
      retries: 5
      start_period: 15s
    depends_on:
      flyway:
        condition: service_healthy
    restart: always
    networks:
     - hummerrisk-network

  jobs:
    image: xuxueli/xxl-job-admin:2.3.1
    container_name: hmr-job-admin
    restart: on-failure
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.5
#    env_file:
#      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    environment:
      ### xxl-job, datasource
      PARAMS: "--spring.datasource.username=${HMR_DB_USER} --spring.datasource.password=${HMR_DB_PASSWORD} --spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver --spring.datasource.url=jdbc:mysql://${HMR_DB_HOST}:${HMR_DB_PORT}/${HMR_DB_NAME}?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai"
    healthcheck:
      test: "curl -fsL http://localhost:8080/xxl-job-admin> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    volumes:
      - ${HMR_BASE}/logs/jobs:/data/applogs
    networks:
      - hummerrisk-network
    depends_on:
      auth:
        condition: service_healthy

  flyway:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-flyway:${VERSION}
    container_name: hmr-flyway
    restart: on-failure
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    environment:
      JAVA_OPTIONS: "-Dfile.encoding=utf-8 -Djava.awt.headless=true -DHMR_MYSQL_HOST=${HMR_DB_HOST} -DHMR_MYSQL_PORT=${HMR_DB_PORT} -DHMR_MYSQL_DB_NACOS=${HMR_DB_NACOS_NAME} -DHMR_MYSQL_USER=${HMR_DB_USER} -DHMR_MYSQL_PASSWORD=${HMR_DB_PASSWORD}"
    ports:
      - 9000:9000
    healthcheck:
      test: "curl -fsL http://localhost:9000/healthz> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    volumes:
      - ${HMR_BASE}/logs/flyway:/var/log/flyway
    networks:
     - hummerrisk-network
    depends_on:
      mysql:
        condition: service_healthy

  auth:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-auth:${VERSION}
    container_name: hmr-auth
    restart: on-failure
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
#    environment:
#      HMR_MYSQL_HOST: ${HMR_DB_HOST}
#      HMR_MYSQL_PORT: ${HMR_DB_PORT}
#      HMR_MYSQL_DB: ${HMR_DB_NAME}
#      HMR_MYSQL_USER: ${HMR_DB_USER}
#      HMR_MYSQL_PASSWORD: ${HMR_DB_PASSWORD}
#      JAVA_OPTIONS: "-Dfile.encoding=utf-8 -Djava.awt.headless=true -DHMR_NACOS_SERVER_ADDR=${HMR_NACOS_SERVER_ADDR}"
    ports:
      - 9200:9200
    healthcheck:
      test: "curl -fsL http://localhost:9200/healthz> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    volumes:
      - ${HMR_BASE}/logs/auth:/var/log/auth
    networks:
     - hummerrisk-network
    depends_on:
      nacos:
        condition: service_healthy

  gateway:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-gateway:${VERSION}
    container_name: hmr-gateway
    restart: on-failure
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    ports:
      - 8088:8088
    healthcheck:
      test: "curl -fsL http://localhost:8088/healthz> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    volumes:
      - ${HMR_BASE}/logs/gateway:/var/log/gateway
    networks:
     - hummerrisk-network
    depends_on:
      auth:
        condition: service_healthy

  system:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-system:${VERSION}
    container_name: hmr-system
    restart: on-failure
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    ports:
      - 9201:9201
    healthcheck:
      test: "curl -fsL http://localhost:9201/healthz> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    volumes:
      - ${HMR_BASE}/logs/system:/var/log/system
    networks:
     - hummerrisk-network
    depends_on:
      auth:
        condition: service_healthy

#  job:
#    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-job:${VERSION}
#    container_name: hmr-job
#    restart: on-failure
#    env_file:
#      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
#    ports:
#      - 9202:9202
#    healthcheck:
#      test: "curl -fsL http://localhost:9202/healthz> /dev/null"
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 120s
#    volumes:
#      - ${HMR_BASE}/logs/job:/var/log/job
#    networks:
#     - hummerrisk-network
#    depends_on:
#      auth:
#        condition: service_healthy

  cloud:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-cloud:${VERSION}
    container_name: hmr-cloud
    restart: on-failure
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    ports:
      - 9400:9400
    volumes:
      - ${HMR_BASE}/conf/hummerrisk/aws-config:/root/.aws
      - ${HMR_BASE}/logs/cloud:/var/log/cloud
    healthcheck:
      test: "curl -fsL http://localhost:9400/healthz> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    networks:
     - hummerrisk-network
    depends_on:
      auth:
        condition: service_healthy
  k8s:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-k8s:${VERSION}
    container_name: hmr-k8s
    restart: on-failure
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    ports:
      - 9500:9500
    volumes:
      - ${HMR_BASE}/data/hummerrisk/trivy:/opt/hummerrisk/trivy
      - ${HMR_BASE}/data/trivy:/root/.cache/trivy/
      - ${HMR_BASE}/conf/hummerrisk/aws-config:/root/.aws
      - ${HMR_BASE}/logs/k8s:/var/log/k8s
    healthcheck:
      test: "curl -fsL http://localhost:9500/healthz> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    networks:
     - hummerrisk-network
    depends_on:
      auth:
        condition: service_healthy

  monitor:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-monitor:${VERSION}
    container_name: hmr-monitor
    restart: on-failure
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    ports:
      - 9100:9100
    healthcheck:
      test: "curl -fsL http://localhost:9100/healthz> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    volumes:
      - ${HMR_BASE}/logs/monitor:/var/log/monitor
    networks:
     - hummerrisk-network
    depends_on:
      auth:
        condition: service_healthy

  ui:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hmr-ui:${VERSION}
    container_name: hmr-ui
    restart: on-failure
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.5
    env_file:
      - ${HMR_BASE}/conf/hummerrisk/hummerrisk-db.env
    ports:
      - 8089:80
    healthcheck:
      test: "curl -fsL http://localhost:80> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    volumes:
      - ${HMR_BASE}/logs/ui:/var/log/ui
    networks:
     - hummerrisk-network
    depends_on:
      auth:
        condition: service_healthy

  trivy-server:
    image: registry.cn-beijing.aliyuncs.com/hummerrisk/hummerrisk:${VERSION}
    container_name: hmr-trivy-server
    restart: always
    ports:
      - ${TRIVY_SERVER_PORT}:4975
    command: "trivy server --skip-db-update --listen 0.0.0.0:4975"
    volumes:
      - ${HMR_BASE}/data/trivy:/root/.cache/trivy/
    healthcheck:
      test: "curl -fsL http://localhost:4975/healthz> /dev/null"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    networks:
     - hummerrisk-network
    depends_on:
      auth:
        condition: service_healthy

networks:
  hummerrisk-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${HMR_DOCKER_SUBNET}
          gateway: ${HMR_DOCKER_GATEWAY}

